{"compress":true,"commitItems":[["a0978736-faa6-458e-8368-e4f7dd0b53af",1519972175307,"",[[1519972154005,["Administrator@PNIN6EWFA74MMDR",[[1,0,"js书籍\n===\n\n\n## 1、作用域\n\n### 1.1  js的执行分为两个阶段\n\n*   编译阶段，编译阶段会处理代码中的声明，并把变量放置与作用域中存储；并生成可被js引擎执行的代码\n```\n  var x = 2;// 编译阶段处理var x ，对x进行声明 ，x = 2 为赋值语句，需要js引擎去执行\n  function foo (a) {console.log(a)};// 编译阶段对函数进行声明，声明的同时对其已经赋值了（函数特殊）\n  \n```\n*   js引擎执行阶段，引擎执行编译生成的代码；引擎执行时，面对变量会在作用域内进行查找\n>   查找分为LHS引用，和RHS引用；简单来说LHS，找到变量容器本身，并进行赋值；RHS则是找到源式值\n>   函数执行时，函数内部的代码会再次执行一次，同样也会走编译--执行的流程；\n\n*   函数的词法作用域，无论函数在哪里被调用，也无论它被如何调用，它的词法作用域只是由函数被声明时所处的位置所决定的；（作用域是由编译阶段所确定的，也是由书写时函数声明的位置所决定的，编译的词法分析阶段基本能够知道全部的标示符在哪里以及是如何声明的，从而能够预测在执行过程中如何对他们进行查找）\n*   不要使用`with` 和 `eval`，这样会使得程序无法对代码进行优化；\n\n### 1.2 闭包\n\n> 无论通过何种方式将内部函数传递到所在的词法作用域之外，它都会持有对原始作用域的引用，无论在何处\n> 由于函数可以被当成第一级的值并到处传递，那么函数在执行时，会带有对：由函数定义时形成的词法作用域的引用，这就是闭包\n> 只要使用了**回调函数** 就是在使用闭包\n\n*   无论函数是具名函数还是匿名函数，实际上都牵扯到了函数的定义，通常情况下，匿名函数不仅在声明函数而且会把函数传递到对应执行器中去；比如\n*   函数的作用域，是由函数定义时决定的，也就是位置决定的\n```\nsetTimeout(function () {...}, 1000);// 实际上当执行到此的时候，同样会对函数进行定义，只不过没办法在此引用这个函数，并且函数会被传递到执行器中\naxios.get(url).then(function () {...})\n\n```\n*   闭包也可以这样去理解，当函数作为值进行传递的时候，函数的作用域如何处理\n*   到了ES6，`let` 和 `const` 会使得代码块`{}` 变成块级作用域，同样会实现闭包的效果\n*   通过JS的任何值都能作为返回值的特性，使用函数可以实现模块的功能（当然ES6 module是原生实现）模块\n*   ES6模块：1、js原生支持的；2、js运行时，编译器会在编译阶段检查导入的模块API成员的引用是否存在，若不存在会抛出早期的错误；\n*   \n```\nfunction module () {\n    var a = '12';\n    var b = [1,2,5];\n    \n    function doSomething () {\n        ...\n    }\n    \n    \n    function doElseSomething () {\n        console.log(a);\n    }\n    \n    return {\n        doSomething: doSomething,\n        doElseSomething: doElseSomething\n    }\n}\nvar x = module();\nx.doSomething();\n\n```"]],[0,0],[1518,1518]]],[1519972160141,["Administrator@PNIN6EWFA74MMDR",[[1,11,"\n"]],[10,10],[11,11]]],[1519972173720,["Administrator@PNIN6EWFA74MMDR",[[1,10,"# 你不知道的javascript"]],[10,10],[27,27]]],[1519972181015,["Administrator@PNIN6EWFA74MMDR",[[1,1536,"\n\n"]],[1536,1536],[1537,1537]]],[1519972195302,["Administrator@PNIN6EWFA74MMDR",[[-1,1537,"\n"],[1,1538,"##"]],[1537,1537],[1539,1539]]],[1519972255834,["Administrator@PNIN6EWFA74MMDR",[[1,1539," 3、对象"]],[1539,1539],[1544,1544]]],[1519972256532,["Administrator@PNIN6EWFA74MMDR",[[1,1544,"\n\n"]],[1544,1544],[1545,1545]]],[1519972257652,["Administrator@PNIN6EWFA74MMDR",[[1,1546,"\n"]],[1545,1545],[1546,1546]]]]],["3c5f2d89-20ae-43d8-8627-083b54b35b31",1520238108228,"js书籍\n===\n\n# 你不知道的javascript\n\n## 1、作用域\n\n### 1.1  js的执行分为两个阶段\n\n*   编译阶段，编译阶段会处理代码中的声明，并把变量放置与作用域中存储；并生成可被js引擎执行的代码\n\n```js\n  var x = 2;// 编译阶段处理var x ，对x进行声明 ，x = 2 为赋值语句，需要js引擎去执行\n  function foo (a) {console.log(a)};// 编译阶段对函数进行声明，声明的同时对其已经赋值了（函数特殊）\n```\n\n*   js引擎执行阶段，引擎执行编译生成的代码；引擎执行时，面对变量会在作用域内进行查找\n>   查找分为LHS引用，和RHS引用；简单来说LHS，找到变量容器本身，并进行赋值；RHS则是找到源式值\n>   函数执行时，函数内部的代码会再次执行一次，同样也会走编译--执行的流程；\n\n*   函数的词法作用域，无论函数在哪里被调用，也无论它被如何调用，它的词法作用域只是由函数被声明时所处的位置所决定的；（作用域是由编译阶段所确定的，也是由书写时函数声明的位置所决定的，编译的词法分析阶段基本能够知道全部的标示符在哪里以及是如何声明的，从而能够预测在执行过程中如何对他们进行查找）\n*   不要使用`with` 和 `eval`，这样会使得程序无法对代码进行优化；\n\n### 1.2 闭包\n\n> 无论通过何种方式将内部函数传递到所在的词法作用域之外，它都会持有对原始作用域的引用，无论在何处\n> 由于函数可以被当成第一级的值并到处传递，那么函数在执行时，会带有对：由函数定义时形成的词法作用域的引用，这就是闭包\n> 只要使用了**回调函数** 就是在使用闭包\n\n*   无论函数是具名函数还是匿名函数，实际上都牵扯到了函数的定义，通常情况下，匿名函数不仅在声明函数而且会把函数传递到对应执行器中去；比如\n*   函数的作用域，是由函数定义时决定的，也就是位置决定的\n\n\n```js\nsetTimeout(function () {...}, 1000);// 实际上当执行到此的时候，同样会对函数进行定义，只不过没办法在此引用这个函数，并且函数会被传递到执行器中\naxios.get(url).then(function () {...})\n\n```\n\n*   闭包也可以这样去理解，当函数作为值进行传递的时候，函数的作用域如何处理\n*   到了ES6，`let` 和 `const` 会使得代码块`{}` 变成块级作用域，同样会实现闭包的效果\n*   通过JS的任何值都能作为返回值的特性，使用函数可以实现模块的功能（当然ES6 module是原生实现）模块\n*   ES6模块：1、js原生支持的；2、js运行时，编译器会在编译阶段检查导入的模块API成员的引用是否存在，若不存在会抛出早期的错误；\n\n\n```js\n    function module () {\n    var a = '12';\n    var b = [1,2,5];\n\n    function doSomething () {\n        ...\n    }\n\n\n    function doElseSomething () {\n        console.log(a);\n    }\n\n    return {\n        doSomething: doSomething,\n        doElseSomething: doElseSomething\n    }\n    }\n    var x = module();\n    x.doSomething();\n```\n\n## 3、对象\n\nJavaScript 中的对象有字面形式（比如 var a = { .. } ）和构造形式（比如 var a = new\nArray(..) ）。字面形式更常用，不过有时候构造形式可以提供更多选项。\n\n许多人都以为“JavaScript 中万物都是对象”，这是错误的。对象是 6 个（或者是 7 个，取\n决于你的观点）基础类型之一。对象有包括 function 在内的子类型，不同子类型具有不同\n的行为，比如内部标签 [object Array] 表示这是对象的子类型数组。\n\n对象就是键 / 值对的集合。可以通过 .propName 或者 [\"propName\"] 语法来获取属性值。访\n问属性时，引擎实际上会调用内部的默认 [[Get]] 操作（在设置属性值时是 [[Put]] ），\n[[Get]] 操作会检查对象本身是否包含这个属性，如果没找到的话还会查找 [[Prototype]]\n链（参见第 5 章）。\n\n属性的特性可以通过属性描述符来控制，比如 writable 和 configurable 。此外，可以使用\nObject.preventExtensions(..) 、 Object.seal(..) 和 Object.freeze(..) 来设置对象（及其\n属性）的不可变性级别。\n\n属性不一定包含值——它们可能是具备 getter/setter 的“访问描述符”。此外，属性可以是\n可枚举或者不可枚举的，这决定了它们是否会出现在 for..in 循环中。\n\n你可以使用 ES6 的 for..of 语法来遍历数据结构（数组、对象，等等）中的值， for..of\n会寻找内置或者自定义的 @@iterator 对象并调用它的 next() 方法来遍历数据值。\n\n## 4、类\n> 面向对象编程强调的是数据和操作数据的行为本质上是互相关联的（当然，不同的数据有\n不同的行为），因此好的设计就是把数据以及和它相关的行为打包（或者说封装）起来。\n这在正式的计算机科学中有时被称为数据结构。\n\n软件思想对现实问题的一种抽象（abstract）；类（class） 继承（inhert） 实例（instance）\n类 / 继承描述了一种代码的组织结构形式——一种在软件中对真实世界中问题领域的建模方法\n\n在ES6中通过以下方式创建类，并实例化\n\n```js\n\nclass Car {// 类，类内部定义的方法都是不可枚举的\n  constructor(name) {\n  \tthis.name = name;\n  }\n  sayHello() {\n  \tconsole.log('say hello');\n  }\n}\n\nclass bmw extends Car {\n  constructor(name, str) {\n  \tsuper(name);\n    this.str = str;\n  }\n}\n```\nES6的继承是子类实例的构建，是基于父类实例加工；\n\n* es6中无法定义私有属性和私有方法，\n* 因为 ES6 明确规定，Class 内部只有静态方法，static没有静态属性。\n* ES6目前没有私有方法和私有属性\n* ES6目前只能在constructor内定义属性，而不能在constructor外定义，\n\n？？ 需ES6的Extends http://es6.ruanyifeng.com/#docs/class-extends 和 page 147\n",[[1520238103868,["Administrator@PNIN6EWFA74MMDR",[[1,2921,"\n"]],[2920,2920],[2921,2921]]],[1520238104157,["Administrator@PNIN6EWFA74MMDR",[[1,2922,"\n"]],[2921,2921],[2922,2922]]],[1520238107986,["Administrator@PNIN6EWFA74MMDR",[[1,2922,"dui"]],[2922,2922],[2925,2925]]],[1520238108270,["Administrator@PNIN6EWFA74MMDR",[[1,2925,"x"]],[2925,2925],[2926,2926]]],[1520238109152,["Administrator@PNIN6EWFA74MMDR",[[-1,2922,"duix"]],[2926,2926],[2922,2922]]],[1520238110696,["Administrator@PNIN6EWFA74MMDR",[[1,2922,"队形的"]],[2922,2922],[2925,2925]]],[1520238111171,["Administrator@PNIN6EWFA74MMDR",[[-1,2922,"队形的"]],[2925,2925],[2922,2922]]],[1520238114616,["Administrator@PNIN6EWFA74MMDR",[[1,2922,"对象的``"]],[2922,2922],[2927,2927]]],[1520238117476,["Administrator@PNIN6EWFA74MMDR",[[1,2926,"valueOf()"]],[2926,2926],[2935,2935]]],[1520238118510,["Administrator@PNIN6EWFA74MMDR",[[-1,2933,"()"]],[2935,2935],[2933,2933]]],[1520238130516,["Administrator@PNIN6EWFA74MMDR",[[1,2934,"方法能够返回对象的``"]],[2934,2934],[2945,2945]]],[1520238132351,["Administrator@PNIN6EWFA74MMDR",[[-1,2943,"``"]],[2944,2944],[2943,2943]]],[1520238138960,["Administrator@PNIN6EWFA74MMDR",[[1,2943,"****"]],[2943,2943],[2947,2947]]],[1520238143640,["Administrator@PNIN6EWFA74MMDR",[[1,2945,"原始值"]],[2945,2945],[2948,2948]]],[1520238146708,["Administrator@PNIN6EWFA74MMDR",[[1,2950,"，"]],[2950,2950],[2951,2951]]],[1520238148658,["Administrator@PNIN6EWFA74MMDR",[[1,2950,"（）"]],[2950,2950],[2952,2952]]],[1520238152412,["Administrator@PNIN6EWFA74MMDR",[[1,2951,"primitive"]],[2951,2951],[2960,2960]]],[1520238155042,["Administrator@PNIN6EWFA74MMDR",[[1,2963,"\n"]],[2962,2962],[2963,2963]]],[1520238160417,["Administrator@PNIN6EWFA74MMDR",[[1,2964,"\n"]],[2962,2962],[2963,2963]]],[1520238221026,["Administrator@PNIN6EWFA74MMDR",[[1,2962,"默认情况下object的原始值是对象本身，对一些js中的核心对象，返回值又各有各的不同"]],[2962,2962],[3005,3005]]],[1520238234032,["Administrator@PNIN6EWFA74MMDR",[[1,3006,"\\"]],[3006,3006],[3007,3007]]],[1520238234610,["Administrator@PNIN6EWFA74MMDR",[[-1,3006,"\\"]],[3007,3007],[3006,3006]]],[1520238239237,["Administrator@PNIN6EWFA74MMDR",[[1,3006,"| ----|"]],[3006,3006],[3013,3013]]],[1520238240343,["Administrator@PNIN6EWFA74MMDR",[[1,3012," "]],[3012,3012],[3013,3013]]],[1520238242242,["Administrator@PNIN6EWFA74MMDR",[[1,3008,"："]],[3008,3008],[3009,3009]]],[1520238243157,["Administrator@PNIN6EWFA74MMDR",[[-1,3008,"："]],[3009,3009],[3008,3008]]],[1520238243881,["Administrator@PNIN6EWFA74MMDR",[[1,3008,":"]],[3008,3008],[3009,3009]]],[1520238245494,["Administrator@PNIN6EWFA74MMDR",[[1,3014,":"]],[3014,3014],[3015,3015]]],[1520238250616,["Administrator@PNIN6EWFA74MMDR",[[1,3016," :---:|"]],[3016,3016],[3023,3023]]],[1520238252723,["Administrator@PNIN6EWFA74MMDR",[[1,3021,"--"]],[3021,3021],[3023,3023]]],[1520238253526,["Administrator@PNIN6EWFA74MMDR",[[1,3024," "]],[3024,3024],[3025,3025]]],[1520238254269,["Administrator@PNIN6EWFA74MMDR",[[1,3028,"\n"]],[3026,3026],[3027,3027]]],[1520238255434,["Administrator@PNIN6EWFA74MMDR",[[1,3027,"|||"]],[3027,3027],[3030,3030]]],[1520238256986,["Administrator@PNIN6EWFA74MMDR",[[1,3028," "]],[3028,3028],[3029,3029]]],[1520238269863,["Administrator@PNIN6EWFA74MMDR",[[1,3030," \n| A0 | B0 |\n|---|---|\n| A1 | B1 |\n| A2 | B2 |\n| A3 | B3 |\n| A4 | B4 |\n| A5 | B5 |\n| A6 | B6 |\n| A7 | B7 |\n\n"]],[3030,3030],[3139,3139]]],[1520238278442,["Administrator@PNIN6EWFA74MMDR",[[-1,3006,"| :---- :| :-----: |\n| | "]],[3006,3031],[3006,3006]]],[1520238279367,["Administrator@PNIN6EWFA74MMDR",[[-1,3006,"\n"]],[3006,3006],[3006,3006]]],[1520238283623,["Administrator@PNIN6EWFA74MMDR",[[-1,3008,"A0 "],[1,3011,"d"]],[3008,3011],[3009,3009]]],[1520238284228,["Administrator@PNIN6EWFA74MMDR",[[-1,3008,"d"]],[3009,3009],[3008,3008]]],[1520238286673,["Administrator@PNIN6EWFA74MMDR",[[1,3008,"对象"]],[3008,3008],[3010,3010]]],[1520238289324,["Administrator@PNIN6EWFA74MMDR",[[-1,3012,"B0"]],[3012,3014],[3012,3012]]],[1520238290690,["Administrator@PNIN6EWFA74MMDR",[[1,3012,"返回值"]],[3012,3012],[3015,3015]]],[1520238295427,["Administrator@PNIN6EWFA74MMDR",[[-1,3031,"1"]],[3031,3032],[3031,3031]]],[1520238296358,["Administrator@PNIN6EWFA74MMDR",[[1,3031,"rray"]],[3031,3031],[3035,3035]]],[1520238302615,["Administrator@PNIN6EWFA74MMDR",[[-1,3038,"B1"],[1,3040,"返回数组对象本身。"]],[3038,3040],[3047,3047]]],[1520238308072,["Administrator@PNIN6EWFA74MMDR",[[-1,3052,"A2 "],[1,3055,"Boolean"]],[3052,3055],[3059,3059]]],[1520238312366,["Administrator@PNIN6EWFA74MMDR",[[-1,3061,"B2 "],[1,3064,"布尔值。"]],[3061,3064],[3065,3065]]],[1520238316313,["Administrator@PNIN6EWFA74MMDR",[[-1,3069,"A3 "],[1,3072,"Date"]],[3069,3072],[3073,3073]]],[1520238322493,["Administrator@PNIN6EWFA74MMDR",[[-1,3075,"B3 "],[1,3078,"存储的时间是从 1970 年 1 月 1 日午夜开始计的毫秒数 UTC。（）"]],[3075,3078],[3113,3113]]],[1520238328176,["Administrator@PNIN6EWFA74MMDR",[[1,3112,"返回值类型为number"]],[3112,3112],[3124,3124]]],[1520238333122,["Administrator@PNIN6EWFA74MMDR",[[-1,3129,"A4 "],[1,3132,"Function"]],[3129,3132],[3137,3137]]],[1520238338235,["Administrator@PNIN6EWFA74MMDR",[[-1,3139,"B4"],[1,3141,"函数本身。"]],[3139,3141],[3144,3144]]],[1520238343480,["Administrator@PNIN6EWFA74MMDR",[[-1,3149,"A5 "],[1,3152,"Number"]],[3149,3152],[3155,3155]]],[1520238348039,["Administrator@PNIN6EWFA74MMDR",[[-1,3157,"B5 "],[1,3160,"数字值"]],[3157,3160],[3160,3160]]],[1520238351984,["Administrator@PNIN6EWFA74MMDR",[[-1,3164,"A6 "],[1,3167,"Object"]],[3164,3167],[3170,3170]]],[1520238356510,["Administrator@PNIN6EWFA74MMDR",[[-1,3172,"B6"]],[3173,3173],[3172,3172]]],[1520238356737,["Administrator@PNIN6EWFA74MMDR",[[1,3172,"对象本身。这是默认情况。"]],[3172,3172],[3184,3184]]],[1520238361900,["Administrator@PNIN6EWFA74MMDR",[[-1,3189,"A7 "],[1,3192,"String"]],[3189,3192],[3195,3195]]],[1520238367571,["Administrator@PNIN6EWFA74MMDR",[[-1,3197,"B7 "],[1,3200,"字符串值。"]],[3197,3200],[3202,3202]]],[1520238369130,["Administrator@PNIN6EWFA74MMDR",[[-1,3204,"\n"]],[3204,3204],[3204,3204]]],[1520238370573,["Administrator@PNIN6EWFA74MMDR",[[1,3205,"||"]],[3205,3205],[3207,3207]]],[1520238378163,["Administrator@PNIN6EWFA74MMDR",[[1,3205,"Math Error"]],[3205,3205],[3215,3215]]],[1520238383391,["Administrator@PNIN6EWFA74MMDR",[[1,3216," Math 和 Error 对象没有 valueOf 方法。"]],[3215,3215],[3246,3246]]],[1520239665460,["Administrator@PNIN6EWFA74MMDR",[[1,3249,"\n"]],[3247,3247],[3248,3248]]],[1520239665611,["Administrator@PNIN6EWFA74MMDR",[[1,3250,"\n"]],[3248,3248],[3249,3249]]],[1520239667989,["Administrator@PNIN6EWFA74MMDR",[[1,3249,"valueOf"]],[3249,3249],[3256,3256]]],[1520239673573,["Administrator@PNIN6EWFA74MMDR",[[1,3249,"**"]],[3249,3249],[3251,3251]]],[1520239678804,["Administrator@PNIN6EWFA74MMDR",[[1,3258,"** 方法返回"]],[3258,3258],[3265,3265]]],[1520239679998,["Administrator@PNIN6EWFA74MMDR",[[-1,3263,"返回"]],[3265,3265],[3263,3263]]],[1520239684030,["Administrator@PNIN6EWFA74MMDR",[[1,3263,"返回对象的原始值，"]],[3263,3263],[3272,3272]]],[1520239693117,["Administrator@PNIN6EWFA74MMDR",[[1,3274,"\n"]],[3273,3273],[3274,3274]]],[1520239696105,["Administrator@PNIN6EWFA74MMDR",[[1,3273,"****"]],[3273,3273],[3277,3277]]],[1520239700347,["Administrator@PNIN6EWFA74MMDR",[[1,3275,"toString"]],[3275,3275],[3283,3283]]],[1520239702081,["Administrator@PNIN6EWFA74MMDR",[[1,3285,"fan"]],[3285,3285],[3288,3288]]],[1520239702938,["Administrator@PNIN6EWFA74MMDR",[[-1,3285,"fan"]],[3288,3288],[3285,3285]]],[1520239712596,["Administrator@PNIN6EWFA74MMDR",[[1,3285,"方法返回对象的字符串表示，"]],[3285,3285],[3298,3298]]],[1520239717283,["Administrator@PNIN6EWFA74MMDR",[[1,3272,"不经常使用，"]],[3272,3272],[3278,3278]]],[1520239718799,["Administrator@PNIN6EWFA74MMDR",[[-1,3277,"，"]],[3278,3278],[3277,3277]]],[1520239731564,["Administrator@PNIN6EWFA74MMDR",[[1,3303,"在隐式类型转换中会用到"]],[3303,3303],[3314,3314]]],[1520239735109,["Administrator@PNIN6EWFA74MMDR",[[1,3316,"\n"]],[3314,3314],[3315,3315]]],[1520239736559,["Administrator@PNIN6EWFA74MMDR",[[1,3315,"```"]],[3315,3315],[3318,3318]]],[1520239737257,["Administrator@PNIN6EWFA74MMDR",[[1,3320,"\n"]],[3318,3318],[3319,3319]]],[1520239737836,["Administrator@PNIN6EWFA74MMDR",[[1,3319,"```"]],[3319,3319],[3322,3322]]],[1520239738697,["Administrator@PNIN6EWFA74MMDR",[[1,3319,"\n"]],[3318,3318],[3319,3319]]],[1520239741805,["Administrator@PNIN6EWFA74MMDR",[[1,3318,"js"]],[3318,3318],[3320,3320]]],[1520239742571,["Administrator@PNIN6EWFA74MMDR",[[1,3321,"\t"]],[3321,3321],[3322,3322]]],[1520239743088,["Administrator@PNIN6EWFA74MMDR",[[-1,3321,"\t"]],[3322,3322],[3321,3321]]],[1520239747056,["Administrator@PNIN6EWFA74MMDR",[[1,3321,"var obj = {}"]],[3321,3321],[3333,3333]]],[1520239747710,["Administrator@PNIN6EWFA74MMDR",[[1,3332,"\n"]],[3332,3332],[3333,3333]]],[1520239747849,["Administrator@PNIN6EWFA74MMDR",[[1,3333,"\n"]],[3333,3333],[3334,3334]]],[1520239749742,["Administrator@PNIN6EWFA74MMDR",[[1,3333," name:L "]],[3333,3333],[3341,3341]]],[1520239750313,["Administrator@PNIN6EWFA74MMDR",[[-1,3339,"L "]],[3341,3341],[3339,3339]]],[1520239750906,["Administrator@PNIN6EWFA74MMDR",[[1,3339," ''"]],[3339,3339],[3342,3342]]],[1520239754880,["Administrator@PNIN6EWFA74MMDR",[[1,3341,"hellow"]],[3341,3341],[3347,3347]]],[1520239756600,["Administrator@PNIN6EWFA74MMDR",[[-1,3346,"w"]],[3347,3347],[3346,3346]]],[1520239757455,["Administrator@PNIN6EWFA74MMDR",[[1,3347,","]],[3347,3347],[3348,3348]]],[1520239757755,["Administrator@PNIN6EWFA74MMDR",[[1,3349,"\n"]],[3348,3348],[3349,3349]]],[1520239758527,["Administrator@PNIN6EWFA74MMDR",[[1,3349,"\t"]],[3349,3349],[3350,3350]]],[1520239759252,["Administrator@PNIN6EWFA74MMDR",[[-1,3349,"\t"]],[3350,3350],[3349,3349]]],[1520239760201,["Administrator@PNIN6EWFA74MMDR",[[1,3349,"  ga"]],[3349,3349],[3353,3353]]],[1520239760832,["Administrator@PNIN6EWFA74MMDR",[[-1,3350," ga"]],[3353,3353],[3350,3350]]],[1520239761532,["Administrator@PNIN6EWFA74MMDR",[[1,3334," "]],[3334,3334],[3335,3335]]],[1520239763409,["Administrator@PNIN6EWFA74MMDR",[[1,3351," age"]],[3351,3351],[3355,3355]]],[1520239764497,["Administrator@PNIN6EWFA74MMDR",[[1,3355,": 12"]],[3355,3355],[3359,3359]]],[1520239765503,["Administrator@PNIN6EWFA74MMDR",[[1,3361,";"]],[3361,3361],[3362,3362]]],[1520239765680,["Administrator@PNIN6EWFA74MMDR",[[1,3363,"\n"]],[3362,3362],[3363,3363]]],[1520239767721,["Administrator@PNIN6EWFA74MMDR",[[1,3364,"\n"]],[3363,3363],[3364,3364]]],[1520239770869,["Administrator@PNIN6EWFA74MMDR",[[1,3364,"obj.toSting()"]],[3364,3364],[3377,3377]]],[1520239772663,["Administrator@PNIN6EWFA74MMDR",[[-1,3371,"ting()"]],[3377,3377],[3371,3371]]],[1520239774714,["Administrator@PNIN6EWFA74MMDR",[[1,3371,"tring()"]],[3371,3371],[3378,3378]]],[1520239775500,["Administrator@PNIN6EWFA74MMDR",[[-1,3376,"()"]],[3378,3378],[3376,3376]]],[1520239778200,["Administrator@PNIN6EWFA74MMDR",[[1,3376," = function () {}"]],[3376,3376],[3393,3393]]],[1520239779444,["Administrator@PNIN6EWFA74MMDR",[[1,3392,"\n"]],[3392,3392],[3393,3393]]],[1520239779914,["Administrator@PNIN6EWFA74MMDR",[[1,3393,"\n"]],[3393,3393],[3394,3394]]],[1520239783952,["Administrator@PNIN6EWFA74MMDR",[[1,3393,"\tconsole.log()"]],[3393,3393],[3407,3407]]],[1520239784901,["Administrator@PNIN6EWFA74MMDR",[[1,3406,"''"]],[3406,3406],[3408,3408]]],[1520239793146,["Administrator@PNIN6EWFA74MMDR",[[1,3407,"obj 调用了toSting方法"]],[3407,3407],[3423,3423]]],[1520239794197,["Administrator@PNIN6EWFA74MMDR",[[1,3425,";"]],[3425,3425],[3426,3426]]],[1520239794474,["Administrator@PNIN6EWFA74MMDR",[[1,3427,"\n"]],[3426,3426],[3427,3427]]],[1520239797352,["Administrator@PNIN6EWFA74MMDR",[[1,3427,"\treturn ''"]],[3427,3427],[3437,3437]]],[1520239799253,["Administrator@PNIN6EWFA74MMDR",[[1,3436,"hello"]],[3436,3436],[3441,3441]]],[1520239802652,["Administrator@PNIN6EWFA74MMDR",[[-1,3435,"'hello'"]],[3441,3441],[3435,3435]]],[1520239809214,["Administrator@PNIN6EWFA74MMDR",[[1,3435,"obj.name + obj.age;"]],[3435,3435],[3454,3454]]],[1520239811067,["Administrator@PNIN6EWFA74MMDR",[[1,3457,"\n"]],[3456,3456],[3457,3457]]],[1520239811238,["Administrator@PNIN6EWFA74MMDR",[[1,3458,"\n"]],[3457,3457],[3458,3458]]],[1520239812032,["Administrator@PNIN6EWFA74MMDR",[[1,3458,"+"]],[3458,3458],[3459,3459]]],[1520239812685,["Administrator@PNIN6EWFA74MMDR",[[-1,3458,"+"]],[3459,3459],[3458,3458]]],[1520239813412,["Administrator@PNIN6EWFA74MMDR",[[1,3458,"''"]],[3458,3458],[3460,3460]]],[1520239814051,["Administrator@PNIN6EWFA74MMDR",[[-1,3458,"''"]],[3460,3460],[3458,3458]]],[1520239814960,["Administrator@PNIN6EWFA74MMDR",[[1,3458,"copnsol"]],[3458,3458],[3465,3465]]],[1520239815681,["Administrator@PNIN6EWFA74MMDR",[[-1,3460,"pnsol"]],[3465,3465],[3460,3460]]],[1520239816517,["Administrator@PNIN6EWFA74MMDR",[[1,3460,"nsiol"]],[3460,3460],[3465,3465]]],[1520239817121,["Administrator@PNIN6EWFA74MMDR",[[-1,3462,"iol"]],[3465,3465],[3462,3462]]],[1520239817391,["Administrator@PNIN6EWFA74MMDR",[[1,3462,"i"]],[3462,3462],[3463,3463]]],[1520239817862,["Administrator@PNIN6EWFA74MMDR",[[-1,3462,"i"]],[3463,3463],[3462,3462]]],[1520239819288,["Administrator@PNIN6EWFA74MMDR",[[1,3462,"ole.log()"]],[3462,3462],[3471,3471]]],[1520239820599,["Administrator@PNIN6EWFA74MMDR",[[1,3470,"''"]],[3470,3470],[3472,3472]]],[1520239821883,["Administrator@PNIN6EWFA74MMDR",[[-1,3470,"''"]],[3472,3472],[3470,3470]]],[1520239824194,["Administrator@PNIN6EWFA74MMDR",[[1,3458,"\n"]],[3457,3457],[3458,3458]]],[1520239828504,["Administrator@PNIN6EWFA74MMDR",[[1,3457,"var str = ''"]],[3457,3457],[3469,3469]]],[1520239830395,["Administrator@PNIN6EWFA74MMDR",[[1,3468,"这是"]],[3468,3468],[3470,3470]]],[1520239832302,["Administrator@PNIN6EWFA74MMDR",[[-1,3469,"是"]],[3470,3470],[3469,3469]]],[1520239834186,["Administrator@PNIN6EWFA74MMDR",[[1,3469,"时"]],[3469,3469],[3470,3470]]],[1520239834862,["Administrator@PNIN6EWFA74MMDR",[[-1,3468,"这时"]],[3470,3470],[3468,3468]]],[1520239837656,["Administrator@PNIN6EWFA74MMDR",[[1,3468,"这是一个str"]],[3468,3468],[3475,3475]]],[1520239838703,["Administrator@PNIN6EWFA74MMDR",[[1,3476,"；"]],[3475,3475],[3477,3477]]],[1520239839654,["Administrator@PNIN6EWFA74MMDR",[[-1,3476,"；"]],[3477,3477],[3476,3476]]],[1520239839916,["Administrator@PNIN6EWFA74MMDR",[[1,3476,";"]],[3476,3476],[3477,3477]]],[1520239844429,["Administrator@PNIN6EWFA74MMDR",[[1,3491,"str + pob"]],[3491,3491],[3500,3500]]],[1520239844998,["Administrator@PNIN6EWFA74MMDR",[[-1,3497,"pob"]],[3500,3500],[3497,3497]]],[1520239845903,["Administrator@PNIN6EWFA74MMDR",[[1,3497,"obj"]],[3497,3497],[3500,3500]]],[1520239846915,["Administrator@PNIN6EWFA74MMDR",[[1,3501,";"]],[3501,3501],[3502,3502]]],[1520239906083,["Administrator@PNIN6EWFA74MMDR",[[1,3502,"// 这是一个strhello12,"]],[3502,3502],[3520,3520]]],[1520239906912,["Administrator@PNIN6EWFA74MMDR",[[-1,3519,","]],[3520,3520],[3519,3519]]],[1520239907193,["Administrator@PNIN6EWFA74MMDR",[[1,3519,"吗，"]],[3519,3519],[3521,3521]]],[1520239908855,["Administrator@PNIN6EWFA74MMDR",[[-1,3519,"吗，"]],[3521,3521],[3519,3519]]],[1520239924785,["Administrator@PNIN6EWFA74MMDR",[[1,3519,"，调用了toString方法"]],[3519,3519],[3533,3533]]],[1520239925569,["Administrator@PNIN6EWFA74MMDR",[[1,3534,"\n"]],[3533,3533],[3534,3534]]],[1520239925896,["Administrator@PNIN6EWFA74MMDR",[[1,3535,"\n"]],[3534,3534],[3535,3535]]],[1520239926233,["Administrator@PNIN6EWFA74MMDR",[[1,3536,"\n"]],[3535,3535],[3536,3536]]],[1520239931066,["Administrator@PNIN6EWFA74MMDR",[[1,3536,"obj "]],[3536,3536],[3540,3540]]],[1520239932442,["Administrator@PNIN6EWFA74MMDR",[[-1,3535,"\n"]],[3535,3535],[3535,3535]]],[1520239934117,["Administrator@PNIN6EWFA74MMDR",[[1,3539," "]],[3539,3539],[3540,3540]]],[1520239934882,["Administrator@PNIN6EWFA74MMDR",[[-1,3539," "]],[3540,3540],[3539,3539]]],[1520239935095,["Administrator@PNIN6EWFA74MMDR",[[1,3539,"="]],[3539,3539],[3540,3540]]],[1520239935131,["Administrator@PNIN6EWFA74MMDR",[[-1,3539,"="]],[3540,3540],[3539,3539]]],[1520239936431,["Administrator@PNIN6EWFA74MMDR",[[1,3539,"= 【】"]],[3539,3539],[3543,3543]]],[1520239936948,["Administrator@PNIN6EWFA74MMDR",[[-1,3541,"【】"]],[3543,3543],[3541,3541]]],[1520239938531,["Administrator@PNIN6EWFA74MMDR",[[1,3541,"{};"]],[3541,3541],[3544,3544]]],[1520239938748,["Administrator@PNIN6EWFA74MMDR",[[1,3545,"\n"]],[3544,3544],[3545,3545]]],[1520239938935,["Administrator@PNIN6EWFA74MMDR",[[1,3546,"\n"]],[3545,3545],[3546,3546]]],[1520239941388,["Administrator@PNIN6EWFA74MMDR",[[1,3546,"console.log()"]],[3546,3546],[3559,3559]]],[1520239945589,["Administrator@PNIN6EWFA74MMDR",[[1,3558,"str + pnj"]],[3558,3558],[3567,3567]]],[1520239946548,["Administrator@PNIN6EWFA74MMDR",[[-1,3564,"pnj"]],[3567,3567],[3564,3564]]],[1520239947542,["Administrator@PNIN6EWFA74MMDR",[[1,3564,"obj"]],[3564,3564],[3567,3567]]],[1520239950251,["Administrator@PNIN6EWFA74MMDR",[[1,3568,";/、 "]],[3568,3568],[3572,3572]]],[1520239954106,["Administrator@PNIN6EWFA74MMDR",[[-1,3570,"、 "]],[3572,3572],[3570,3570]]],[1520239955697,["Administrator@PNIN6EWFA74MMDR",[[1,3570,"/ \"这是一个str[object Object]\""]],[3570,3570],[3596,3596]]],[1520239956758,["Administrator@PNIN6EWFA74MMDR",[[-1,3595,"\""]],[3596,3596],[3595,3595]]],[1520239959030,["Administrator@PNIN6EWFA74MMDR",[[-1,3572,"\""]],[3572,3572],[3572,3572]]],[1520239960132,["Administrator@PNIN6EWFA74MMDR",[[1,3594,","]],[3594,3594],[3595,3595]]],[1520239960777,["Administrator@PNIN6EWFA74MMDR",[[-1,3594,","]],[3595,3595],[3594,3594]]],[1520239967898,["Administrator@PNIN6EWFA74MMDR",[[1,3594,"，默认toString返回[]"]],[3594,3594],[3609,3609]]],[1520239972977,["Administrator@PNIN6EWFA74MMDR",[[1,3608,"object Obvj"]],[3608,3608],[3619,3619]]],[1520239973601,["Administrator@PNIN6EWFA74MMDR",[[-1,3617,"vj"]],[3619,3619],[3617,3617]]],[1520239974360,["Administrator@PNIN6EWFA74MMDR",[[1,3617,"ject"]],[3617,3617],[3621,3621]]],[1520239978802,["Administrator@PNIN6EWFA74MMDR",[[1,3607,"'"]],[3607,3607],[3608,3608]]],[1520239979745,["Administrator@PNIN6EWFA74MMDR",[[1,3623,"'"]],[3623,3623],[3624,3624]]],[1520239987211,["Administrator@PNIN6EWFA74MMDR",[[1,3630,"\n"]],[3628,3628],[3629,3629]]],[1520240115980,["Administrator@PNIN6EWFA74MMDR",[[1,3704,"\n"]],[3703,3703],[3704,3704]]],[1520240116124,["Administrator@PNIN6EWFA74MMDR",[[1,3705,"\n"]],[3704,3704],[3705,3705]]],[1520240116269,["Administrator@PNIN6EWFA74MMDR",[[1,3706,"\n"]],[3705,3705],[3706,3706]]],[1520240118500,["Administrator@PNIN6EWFA74MMDR",[[-1,3706,"\n"],[1,3707,"###"]],[3706,3706],[3709,3709]]],[1520240128617,["Administrator@PNIN6EWFA74MMDR",[[-1,2922,"对象的`valueOf`方法能够返回对象的**原始值**（primitive），默认情况下object的原始值是对象本身，对一些js中的核心对象，返回值又各有各的不同\n| 对象| 返回值 |\n|---|---|\n| Array | 返回数组对象本身。 |\n| Boolean| 布尔值。|\n| Date| 存储的时间是从 1970 年 1 月 1 日午夜开始计的毫秒数 UTC。（返回值类型为number）|\n| Function| 函数本身。 |\n| Number| 数字值|\n| Object| 对象本身。这是默认情况。 |\n| String| 字符串值。|\n|Math Error| Math 和 Error 对象没有 valueOf 方法。|\n\n**valueOf** 方法返回对象的原始值，不经常使用\n**toString**方法返回对象的字符串表示，在隐式类型转换中会用到\n```js\nvar obj = {\n  name: 'hello',\n  age: 12\n};\n\nobj.toString = function () {\n\tconsole.log('obj 调用了toSting方法');\n\treturn obj.name + obj.age;\n}\nvar str = '这是一个str';\n\nconsole.log(str + obj);// 这是一个strhello12，调用了toString方法\n\nobj = {};\n\nconsole.log(str + obj);// 这是一个str[object Object]，默认toString返回'[object Object]'\n```"]],[2922,3628],[2922,2922]]],[1520240173068,["Administrator@PNIN6EWFA74MMDR",[[-1,2924,"\n"]],[2920,2920],[2920,2920]]],[1520240173268,["Administrator@PNIN6EWFA74MMDR",[[-1,2923,"\n"]],[2920,2920],[2920,2920]]],[1520240173893,["Administrator@PNIN6EWFA74MMDR",[[-1,2922,"\n"]],[2920,2920],[2920,2920]]],[1520240186443,["Administrator@PNIN6EWFA74MMDR",[[1,2922,"\n"]],[2919,2919],[2920,2920]]],[1520240187746,["Administrator@PNIN6EWFA74MMDR",[[1,2920,"* 使用`super`的时候，必须显式指定是作为函数、还是作为对象使用，否则会报错。"]],[2920,2920],[2962,2962]]],[1520240330722,["Administrator@PNIN6EWFA74MMDR",[[1,2920,"\n"]],[2919,2919],[2920,2920]]],[1520240331043,["Administrator@PNIN6EWFA74MMDR",[[1,2921,"\n"]],[2920,2920],[2921,2921]]],[1520240337606,["Administrator@PNIN6EWFA74MMDR",[[1,2921,"继承时："]],[2921,2921],[2925,2925]]],[1520240341233,["Administrator@PNIN6EWFA74MMDR",[[1,2790,"\n"]],[2789,2789],[2790,2790]]],[1520240342938,["Administrator@PNIN6EWFA74MMDR",[[1,2790,"定义是"]],[2790,2790],[2793,2793]]],[1520240343329,["Administrator@PNIN6EWFA74MMDR",[[-1,2792,"是"]],[2793,2793],[2792,2792]]],[1520240344017,["Administrator@PNIN6EWFA74MMDR",[[1,2792,"是"]],[2792,2792],[2793,2793]]],[1520240344425,["Administrator@PNIN6EWFA74MMDR",[[-1,2792,"是"]],[2793,2793],[2792,2792]]],[1520240345858,["Administrator@PNIN6EWFA74MMDR",[[1,2792,"时："]],[2792,2792],[2794,2794]]],[1520240368032,["Administrator@PNIN6EWFA74MMDR",[[1,2974,"*  // super 作为函数时，只能用在子类的构造函数中constructor，其他地方报错"]],[2974,2974],[3022,3022]]],[1520240374836,["Administrator@PNIN6EWFA74MMDR",[[-1,2976," // "]],[2976,2976],[2976,2976]]],[1520240376785,["Administrator@PNIN6EWFA74MMDR",[[1,3018,"。"]],[3018,3018],[3019,3019]]],[1520240377220,["Administrator@PNIN6EWFA74MMDR",[[1,3021,"\n"]],[3019,3019],[3020,3020]]],[1520240378870,["Administrator@PNIN6EWFA74MMDR",[[1,3020,"* "]],[3020,3020],[3022,3022]]],[1520240385740,["Administrator@PNIN6EWFA74MMDR",[[1,3022,"super作为对象时，在普通方法中，指向父类的原型对象；在静态方法中，指向父类。"]],[3022,3022],[3062,3062]]],[1520240386381,["Administrator@PNIN6EWFA74MMDR",[[1,3064,"\n"]],[3062,3062],[3063,3063]]],[1520240391930,["Administrator@PNIN6EWFA74MMDR",[[1,3063,"* ES6 规定，通过super调用父类的方法时，方法内部的this指向子类"]],[3063,3063],[3101,3101]]],[1520240393652,["Administrator@PNIN6EWFA74MMDR",[[1,3103,"\n"]],[3101,3101],[3102,3102]]],[1520240412161,["Administrator@PNIN6EWFA74MMDR",[[1,3102,"                                         "]],[3102,3102],[3143,3143]]],[1520246185181,["Administrator@PNIN6EWFA74MMDR",[[-1,3145,"？？ 需ES6的Extends http://es6.ruanyifeng.com/#docs/class-extends 和 page 147"]],[3145,3217],[3145,3145]]],[1520246185330,["Administrator@PNIN6EWFA74MMDR",[[-1,3147,"\n"]],[3145,3145],[3144,3144]]],[1520246185908,["Administrator@PNIN6EWFA74MMDR",[[-1,3146,"\n"]],[3144,3144],[3143,3143]]],[1520246186604,["Administrator@PNIN6EWFA74MMDR",[[-1,3142," "]],[3143,3143],[3142,3142]]],[1520246222151,["Administrator@PNIN6EWFA74MMDR",[[-1,3102,"        "]],[3110,3110],[3102,3102]]],[1520246222409,["Administrator@PNIN6EWFA74MMDR",[[1,3102,"\n"]],[3102,3102],[3103,3103]]],[1520246239238,["Administrator@PNIN6EWFA74MMDR",[[1,3103,"【】"]],[3103,3103],[3105,3105]]],[1520246239898,["Administrator@PNIN6EWFA74MMDR",[[-1,3103,"【】"]],[3105,3105],[3103,3103]]],[1520246240363,["Administrator@PNIN6EWFA74MMDR",[[1,3103,"{}"]],[3103,3103],[3105,3105]]],[1520246241011,["Administrator@PNIN6EWFA74MMDR",[[-1,3103,"{}"]],[3105,3105],[3103,3103]]],[1520246241902,["Administrator@PNIN6EWFA74MMDR",[[1,3103,"{}"]],[3103,3103],[3105,3105]]],[1520246242427,["Administrator@PNIN6EWFA74MMDR",[[-1,3103,"{}"]],[3105,3105],[3103,3103]]],[1520246242738,["Administrator@PNIN6EWFA74MMDR",[[1,3103,"【】"]],[3103,3103],[3105,3105]]],[1520246243358,["Administrator@PNIN6EWFA74MMDR",[[-1,3103,"【】"]],[3105,3105],[3103,3103]]],[1520246244014,["Administrator@PNIN6EWFA74MMDR",[[1,3103,"{}"]],[3103,3103],[3105,3105]]],[1520246244635,["Administrator@PNIN6EWFA74MMDR",[[-1,3103,"{}"]],[3105,3105],[3103,3103]]],[1520246247670,["Administrator@PNIN6EWFA74MMDR",[[1,3103,"[]()"]],[3103,3103],[3107,3107]]],[1520246252447,["Administrator@PNIN6EWFA74MMDR",[[1,3106,"!./ims"]],[3106,3106],[3112,3112]]],[1520246252900,["Administrator@PNIN6EWFA74MMDR",[[-1,3111,"s"]],[3112,3112],[3111,3111]]],[1520246261419,["Administrator@PNIN6EWFA74MMDR",[[1,3111,"gs/es6 extends.png"]],[3111,3111],[3129,3129]]],[1520246270546,["Administrator@PNIN6EWFA74MMDR",[[1,3104,"classExtend"]],[3104,3104],[3115,3115]]],[1520246288651,["Administrator@PNIN6EWFA74MMDR",[[1,3103,"!"]],[3103,3103],[3104,3104]]],[1520246291121,["Administrator@PNIN6EWFA74MMDR",[[-1,3118,"!"]],[3118,3118],[3118,3118]]],[1520246297998,["Administrator@PNIN6EWFA74MMDR",[[-1,3141,"                                "]],[3173,3173],[3141,3141]]],[1520246306560,["Administrator@PNIN6EWFA74MMDR",[[1,3103,"\n"]],[3101,3101],[3102,3102]]],[1520246312792,["Administrator@PNIN6EWFA74MMDR",[[1,3143,"![bfc实例](./imgs/bfc.png)"]],[3143,3143],[3167,3167]]],[1520246319086,["Administrator@PNIN6EWFA74MMDR",[[-1,3129," "]],[3130,3130],[3129,3129]]],[1520246330530,["Administrator@PNIN6EWFA74MMDR",[[1,3129,"-"]],[3129,3129],[3130,3130]]],[1520246332248,["Administrator@PNIN6EWFA74MMDR",[[-1,3168,"\n"]],[3167,3167],[3167,3167]]],[1520246333802,["Administrator@PNIN6EWFA74MMDR",[[-1,3143,"![bfc实例](./imgs/bfc.png)"]],[3143,3167],[3143,3143]]],[1520246335572,["Administrator@PNIN6EWFA74MMDR",[[1,3144,"\n"]],[3143,3143],[3144,3144]]],[1520246335803,["Administrator@PNIN6EWFA74MMDR",[[1,3145,"\n"]],[3144,3144],[3145,3145]]],[1520246336726,["Administrator@PNIN6EWFA74MMDR",[[-1,3145,"\n"]],[3144,3144],[3144,3144]]],[1520246337796,["Administrator@PNIN6EWFA74MMDR",[[-1,3144,"\n"]],[3143,3143],[3143,3143]]]]],["4cc9581e-edea-4fae-ae6c-9afd5a01a988",1520299102420,"js书籍\n===\n\n# 你不知道的javascript\n\n## 1、作用域\n\n### 1.1  js的执行分为两个阶段\n\n*   编译阶段，编译阶段会处理代码中的声明，并把变量放置与作用域中存储；并生成可被js引擎执行的代码\n\n```js\n  var x = 2;// 编译阶段处理var x ，对x进行声明 ，x = 2 为赋值语句，需要js引擎去执行\n  function foo (a) {console.log(a)};// 编译阶段对函数进行声明，声明的同时对其已经赋值了（函数特殊）\n```\n\n*   js引擎执行阶段，引擎执行编译生成的代码；引擎执行时，面对变量会在作用域内进行查找\n>   查找分为LHS引用，和RHS引用；简单来说LHS，找到变量容器本身，并进行赋值；RHS则是找到源式值\n>   函数执行时，函数内部的代码会再次执行一次，同样也会走编译--执行的流程；\n\n*   函数的词法作用域，无论函数在哪里被调用，也无论它被如何调用，它的词法作用域只是由函数被声明时所处的位置所决定的；（作用域是由编译阶段所确定的，也是由书写时函数声明的位置所决定的，编译的词法分析阶段基本能够知道全部的标示符在哪里以及是如何声明的，从而能够预测在执行过程中如何对他们进行查找）\n*   不要使用`with` 和 `eval`，这样会使得程序无法对代码进行优化；\n\n### 1.2 闭包\n\n> 无论通过何种方式将内部函数传递到所在的词法作用域之外，它都会持有对原始作用域的引用，无论在何处\n> 由于函数可以被当成第一级的值并到处传递，那么函数在执行时，会带有对：由函数定义时形成的词法作用域的引用，这就是闭包\n> 只要使用了**回调函数** 就是在使用闭包\n\n*   无论函数是具名函数还是匿名函数，实际上都牵扯到了函数的定义，通常情况下，匿名函数不仅在声明函数而且会把函数传递到对应执行器中去；比如\n*   函数的作用域，是由函数定义时决定的，也就是位置决定的\n\n\n```js\nsetTimeout(function () {...}, 1000);// 实际上当执行到此的时候，同样会对函数进行定义，只不过没办法在此引用这个函数，并且函数会被传递到执行器中\naxios.get(url).then(function () {...})\n\n```\n\n*   闭包也可以这样去理解，当函数作为值进行传递的时候，函数的作用域如何处理\n*   到了ES6，`let` 和 `const` 会使得代码块`{}` 变成块级作用域，同样会实现闭包的效果\n*   通过JS的任何值都能作为返回值的特性，使用函数可以实现模块的功能（当然ES6 module是原生实现）模块\n*   ES6模块：1、js原生支持的；2、js运行时，编译器会在编译阶段检查导入的模块API成员的引用是否存在，若不存在会抛出早期的错误；\n\n\n```js\n    function module () {\n    var a = '12';\n    var b = [1,2,5];\n\n    function doSomething () {\n        ...\n    }\n\n\n    function doElseSomething () {\n        console.log(a);\n    }\n\n    return {\n        doSomething: doSomething,\n        doElseSomething: doElseSomething\n    }\n    }\n    var x = module();\n    x.doSomething();\n```\n\n## 3、对象\n\nJavaScript 中的对象有字面形式（比如 var a = { .. } ）和构造形式（比如 var a = new\nArray(..) ）。字面形式更常用，不过有时候构造形式可以提供更多选项。\n\n许多人都以为“JavaScript 中万物都是对象”，这是错误的。对象是 6 个（或者是 7 个，取\n决于你的观点）基础类型之一。对象有包括 function 在内的子类型，不同子类型具有不同\n的行为，比如内部标签 [object Array] 表示这是对象的子类型数组。\n\n对象就是键 / 值对的集合。可以通过 .propName 或者 [\"propName\"] 语法来获取属性值。访\n问属性时，引擎实际上会调用内部的默认 [[Get]] 操作（在设置属性值时是 [[Put]] ），\n[[Get]] 操作会检查对象本身是否包含这个属性，如果没找到的话还会查找 [[Prototype]]\n链（参见第 5 章）。\n\n属性的特性可以通过属性描述符来控制，比如 writable 和 configurable 。此外，可以使用\nObject.preventExtensions(..) 、 Object.seal(..) 和 Object.freeze(..) 来设置对象（及其\n属性）的不可变性级别。\n\n属性不一定包含值——它们可能是具备 getter/setter 的“访问描述符”。此外，属性可以是\n可枚举或者不可枚举的，这决定了它们是否会出现在 for..in 循环中。\n\n你可以使用 ES6 的 for..of 语法来遍历数据结构（数组、对象，等等）中的值， for..of\n会寻找内置或者自定义的 @@iterator 对象并调用它的 next() 方法来遍历数据值。\n\n## 4、类\n> 面向对象编程强调的是数据和操作数据的行为本质上是互相关联的（当然，不同的数据有\n不同的行为），因此好的设计就是把数据以及和它相关的行为打包（或者说封装）起来。\n这在正式的计算机科学中有时被称为数据结构。\n\n软件思想对现实问题的一种抽象（abstract）；类（class） 继承（inhert） 实例（instance）\n类 / 继承描述了一种代码的组织结构形式——一种在软件中对真实世界中问题领域的建模方法\n\n在ES6中通过以下方式创建类，并实例化\n\n```js\n\nclass Car {// 类，类内部定义的方法都是不可枚举的\n  constructor(name) {\n  \tthis.name = name;\n  }\n  sayHello() {\n  \tconsole.log('say hello');\n  }\n}\n\nclass bmw extends Car {\n  constructor(name, str) {\n  \tsuper(name);\n    this.str = str;\n  }\n}\n```\nES6的继承是子类实例的构建，是基于父类实例加工；\n\n定义时：\n* es6中无法定义私有属性和私有方法，\n* 因为 ES6 明确规定，Class 内部只有静态方法，static没有静态属性。\n* ES6目前没有私有方法和私有属性\n* ES6目前只能在constructor内定义属性，而不能在constructor外定义，\n\n继承时：\n* 使用`super`的时候，必须显式指定是作为函数、还是作为对象使用，否则会报错。\n* super 作为函数时，只能用在子类的构造函数中constructor，其他地方报错。\n* super作为对象时，在普通方法中，指向父类的原型对象；在静态方法中，指向父类。\n* ES6 规定，通过super调用父类的方法时，方法内部的this指向子类\n\n\n![classExtend](./imgs/es6-extends.png)\n\n###",[[1520299058815,["Administrator@PNIN6EWFA74MMDR",[[-1,3144,"###"]],[3147,3147],[3144,3144]]],[1520299059880,["Administrator@PNIN6EWFA74MMDR",[[1,3144,"\n\n"]],[3144,3144],[3145,3145]]],[1520299073167,["Administrator@PNIN6EWFA74MMDR",[[-1,3145,"\n"],[1,3146,"javascript zg"]],[3145,3145],[3158,3158]]],[1520299073773,["Administrator@PNIN6EWFA74MMDR",[[-1,3156,"zg"]],[3158,3158],[3156,3156]]],[1520299076582,["Administrator@PNIN6EWFA74MMDR",[[1,3156,"中队友"]],[3156,3156],[3159,3159]]],[1520299077205,["Administrator@PNIN6EWFA74MMDR",[[-1,3157,"队友"]],[3159,3159],[3157,3157]]],[1520299080273,["Administrator@PNIN6EWFA74MMDR",[[1,3157,"对于构造函数"]],[3157,3157],[3163,3163]]],[1520299085652,["Administrator@PNIN6EWFA74MMDR",[[1,3159,"“"]],[3159,3159],[3160,3160]]],[1520299096463,["Administrator@PNIN6EWFA74MMDR",[[1,3164,"”最准确的结束"]],[3164,3164],[3171,3171]]],[1520299096956,["Administrator@PNIN6EWFA74MMDR",[[-1,3169,"结束"]],[3171,3171],[3169,3169]]],[1520299100223,["Administrator@PNIN6EWFA74MMDR",[[1,3169,"解释是"]],[3169,3169],[3172,3172]]],[1520299107835,["Administrator@PNIN6EWFA74MMDR",[[1,3172,"，所有带new"]],[3172,3172],[3179,3179]]],[1520299110872,["Administrator@PNIN6EWFA74MMDR",[[-1,3176,"new"]],[3176,3179],[3176,3176]]],[1520299112104,["Administrator@PNIN6EWFA74MMDR",[[1,3176,"··"]],[3176,3176],[3178,3178]]],[1520299112824,["Administrator@PNIN6EWFA74MMDR",[[-1,3176,"··"]],[3178,3178],[3176,3176]]],[1520299113399,["Administrator@PNIN6EWFA74MMDR",[[1,3176,"``"]],[3176,3176],[3178,3178]]],[1520299114473,["Administrator@PNIN6EWFA74MMDR",[[1,3177,"new "]],[3177,3177],[3181,3181]]],[1520299115510,["Administrator@PNIN6EWFA74MMDR",[[-1,3180," "]],[3181,3181],[3180,3180]]],[1520299116548,["Administrator@PNIN6EWFA74MMDR",[[1,3181,"de "]],[3181,3181],[3184,3184]]],[1520299117267,["Administrator@PNIN6EWFA74MMDR",[[-1,3181,"de "]],[3184,3184],[3181,3181]]],[1520299120272,["Administrator@PNIN6EWFA74MMDR",[[1,3181,"的函数调用"]],[3181,3181],[3186,3186]]],[1520299121940,["Administrator@PNIN6EWFA74MMDR",[[1,3186,"；"]],[3186,3186],[3187,3187]]],[1520299124057,["Administrator@PNIN6EWFA74MMDR",[[1,3187,"\n\n"]],[3187,3187],[3188,3188]]],[1520299138089,["Administrator@PNIN6EWFA74MMDR",[[1,3187,"函数不是构造函数，但是当且仅当使用 new 时，函数调用会变成“构造函数调用”。"]],[3187,3187],[3227,3227]]],[1520299273076,["Administrator@PNIN6EWFA74MMDR",[[1,3227,"prototype可以认为是个委托"]],[3227,3227],[3244,3244]]],[1520299278425,["Administrator@PNIN6EWFA74MMDR",[[-1,3227,"prototype"],[1,3236,"函数不是构造函数，但是当且仅当使用 new 时，函数调用会变成“构造函数调用”。"]],[3227,3236],[3267,3267]]],[1520299279326,["Administrator@PNIN6EWFA74MMDR",[[1,3227,"prototype"],[-1,3227,"函数不是构造函数，但是当且仅当使用 new 时，函数调用会变成“构造函数调用”。"]],[3267,3267],[3227,3236]]],[1520299281878,["Administrator@PNIN6EWFA74MMDR",[[1,3227,"**"]],[3227,3227],[3229,3229]]],[1520299284630,["Administrator@PNIN6EWFA74MMDR",[[1,3238,"**"]],[3238,3238],[3240,3240]]],[1520299641158,["Administrator@PNIN6EWFA74MMDR",[[1,3248,";"]],[3248,3248],[3249,3249]]],[1520299641286,["Administrator@PNIN6EWFA74MMDR",[[1,3251,"\n"]],[3249,3249],[3250,3250]]],[1520299643496,["Administrator@PNIN6EWFA74MMDR",[[-1,3251,"\n"]],[3250,3250],[3249,3249]]],[1520299643666,["Administrator@PNIN6EWFA74MMDR",[[-1,3248,";"]],[3249,3249],[3248,3248]]],[1520299645475,["Administrator@PNIN6EWFA74MMDR",[[1,3248,"；j"]],[3248,3248],[3250,3250]]],[1520299645808,["Administrator@PNIN6EWFA74MMDR",[[-1,3249,"j"]],[3250,3250],[3249,3249]]],[1520299646106,["Administrator@PNIN6EWFA74MMDR",[[1,3251,"\n"]],[3249,3249],[3250,3250]]],[1520299650396,["Administrator@PNIN6EWFA74MMDR",[[1,3250,"javascript椎间盘买个"]],[3250,3250],[3265,3265]]],[1520299651268,["Administrator@PNIN6EWFA74MMDR",[[-1,3260,"椎间盘买个"]],[3265,3265],[3260,3260]]],[1520299679455,["Administrator@PNIN6EWFA74MMDR",[[1,3260,"中的对象通过委托的方式访问对象本身并没有，而在起"]],[3260,3260],[3284,3284]]],[1520299679817,["Administrator@PNIN6EWFA74MMDR",[[-1,3283,"起"]],[3284,3284],[3283,3283]]],[1520299687239,["Administrator@PNIN6EWFA74MMDR",[[1,3283,"其原型上的属性和方法"]],[3283,3283],[3293,3293]]],[1520299687978,["Administrator@PNIN6EWFA74MMDR",[[1,3293,"；"]],[3293,3293],[3294,3294]]],[1520299865088,["Administrator@PNIN6EWFA74MMDR",[[1,3296,"\n"]],[3294,3294],[3295,3295]]],[1520299866002,["Administrator@PNIN6EWFA74MMDR",[[1,3295,"* "]],[3295,3295],[3297,3297]]],[1520299877443,["Administrator@PNIN6EWFA74MMDR",[[1,3297,"原型继承之所以存在"]],[3297,3297],[3306,3306]]],[1520299877826,["Administrator@PNIN6EWFA74MMDR",[[-1,3304,"存在"]],[3306,3306],[3304,3304]]],[1520299884248,["Administrator@PNIN6EWFA74MMDR",[[1,3304,"能够存在去绝不"]],[3304,3304],[3311,3311]]],[1520299884872,["Administrator@PNIN6EWFA74MMDR",[[-1,3308,"去绝不"]],[3311,3311],[3308,3308]]],[1520299889457,["Administrator@PNIN6EWFA74MMDR",[[1,3308,"取决于在访问对象的"]],[3308,3308],[3317,3317]]],[1520299891089,["Administrator@PNIN6EWFA74MMDR",[[-1,3315,"象的"]],[3317,3317],[3315,3315]]],[1520299892205,["Administrator@PNIN6EWFA74MMDR",[[1,3295,"\n"]],[3294,3294],[3295,3295]]],[1520299893182,["Administrator@PNIN6EWFA74MMDR",[[1,3295,"* "]],[3295,3295],[3297,3297]]],[1520299897733,["Administrator@PNIN6EWFA74MMDR",[[-1,3300,"原型继承之所以能够存在取决于"]],[3300,3314],[3300,3300]]],[1520299898850,["Administrator@PNIN6EWFA74MMDR",[[1,3295,"\n"]],[3294,3294],[3295,3295]]],[1520299900299,["Administrator@PNIN6EWFA74MMDR",[[1,3295,"原型继承之所以能够存在取决于："]],[3295,3295],[3310,3310]]],[1520299909613,["Administrator@PNIN6EWFA74MMDR",[[1,3313,"1、javascript 我"]],[3313,3313],[3327,3327]]],[1520299910072,["Administrator@PNIN6EWFA74MMDR",[[-1,3325," 我"]],[3327,3327],[3325,3325]]],[1520299916389,["Administrator@PNIN6EWFA74MMDR",[[1,3325,"为动态类型的语言"]],[3325,3325],[3333,3333]]],[1520299919504,["Administrator@PNIN6EWFA74MMDR",[[1,3336,"2、"]],[3336,3336],[3338,3338]]],[1520299921047,["Administrator@PNIN6EWFA74MMDR",[[-1,3341,"对"]],[3342,3342],[3341,3341]]],[1520299921732,["Administrator@PNIN6EWFA74MMDR",[[1,3341,"是"]],[3341,3341],[3342,3342]]],[1520299922499,["Administrator@PNIN6EWFA74MMDR",[[-1,3341,"是"]],[3342,3342],[3341,3341]]],[1520299927623,["Administrator@PNIN6EWFA74MMDR",[[1,3341,"属性的对象时"]],[3341,3341],[3347,3347]]],[1520299953391,["Administrator@PNIN6EWFA74MMDR",[[-1,3341,"属性的对象时"]],[3347,3347],[3341,3341]]],[1520299956730,["Administrator@PNIN6EWFA74MMDR",[[1,3341,"对象的属性时"]],[3341,3341],[3347,3347]]],[1520300010454,["Administrator@PNIN6EWFA74MMDR",[[1,3347,"存在原型链查找，当在本"]],[3347,3347],[3358,3358]]],[1520300012073,["Administrator@PNIN6EWFA74MMDR",[[-1,3357,"本"]],[3358,3358],[3357,3357]]],[1520300016082,["Administrator@PNIN6EWFA74MMDR",[[1,3357,"属性内部"]],[3357,3357],[3361,3361]]],[1520300017253,["Administrator@PNIN6EWFA74MMDR",[[-1,3359,"内部"]],[3361,3361],[3359,3359]]],[1520300022441,["Administrator@PNIN6EWFA74MMDR",[[1,3359,"内步不能找到"]],[3359,3359],[3365,3365]]],[1520300025870,["Administrator@PNIN6EWFA74MMDR",[[-1,3360,"步"],[1,3361,"补 "]],[3359,3361],[3362,3362]]],[1520300026674,["Administrator@PNIN6EWFA74MMDR",[[-1,3359,"内补 "]],[3362,3362],[3359,3359]]],[1520300030690,["Administrator@PNIN6EWFA74MMDR",[[1,3359,"内部"]],[3359,3359],[3361,3361]]],[1520300044212,["Administrator@PNIN6EWFA74MMDR",[[1,3365,"对应的属性时，会去起对象"]],[3365,3365],[3377,3377]]],[1520300044974,["Administrator@PNIN6EWFA74MMDR",[[-1,3375,"对象"]],[3377,3377],[3375,3375]]],[1520300048183,["Administrator@PNIN6EWFA74MMDR",[[1,3375,"对应的原型"]],[3375,3375],[3380,3380]]],[1520300051209,["Administrator@PNIN6EWFA74MMDR",[[1,3380,"链上查询"]],[3380,3380],[3384,3384]]],[1520300051529,["Administrator@PNIN6EWFA74MMDR",[[-1,3383,"询"]],[3384,3384],[3383,3383]]],[1520300052791,["Administrator@PNIN6EWFA74MMDR",[[1,3383,"找，"]],[3383,3383],[3385,3385]]],[1520300053675,["Administrator@PNIN6EWFA74MMDR",[[-1,3384,"，"]],[3385,3385],[3384,3384]]],[1520300056778,["Administrator@PNIN6EWFA74MMDR",[[1,3384,"，知道"]],[3384,3384],[3387,3387]]],[1520300057542,["Administrator@PNIN6EWFA74MMDR",[[-1,3385,"知道"]],[3387,3387],[3385,3385]]],[1520300088271,["Administrator@PNIN6EWFA74MMDR",[[1,3385,"直到最顶层的原型；最后返回值为`"]],[3385,3385],[3401,3401]]],[1520300089882,["Administrator@PNIN6EWFA74MMDR",[[-1,3399,"为`"]],[3401,3401],[3399,3399]]],[1520300090223,["Administrator@PNIN6EWFA74MMDR",[[1,3399,"hu"]],[3399,3399],[3401,3401]]],[1520300090849,["Administrator@PNIN6EWFA74MMDR",[[-1,3399,"hu"]],[3401,3401],[3399,3399]]],[1520300094929,["Administrator@PNIN6EWFA74MMDR",[[1,3399,"为寸"]],[3399,3399],[3401,3401]]],[1520300095291,["Administrator@PNIN6EWFA74MMDR",[[-1,3400,"寸"]],[3401,3401],[3400,3400]]],[1520300101579,["Administrator@PNIN6EWFA74MMDR",[[1,3400,"存在的值或为··"]],[3400,3400],[3408,3408]]],[1520300102270,["Administrator@PNIN6EWFA74MMDR",[[-1,3406,"··"]],[3408,3408],[3406,3406]]],[1520300103439,["Administrator@PNIN6EWFA74MMDR",[[1,3406,"``"]],[3406,3406],[3408,3408]]],[1520300108028,["Administrator@PNIN6EWFA74MMDR",[[1,3407,"undefined"]],[3407,3407],[3416,3416]]],[1520300111740,["Administrator@PNIN6EWFA74MMDR",[[1,3417,"\\\\"]],[3417,3417],[3419,3419]]],[1520300112340,["Administrator@PNIN6EWFA74MMDR",[[-1,3417,"\\\\"]],[3419,3419],[3417,3417]]],[1520300112912,["Administrator@PNIN6EWFA74MMDR",[[1,3419,"\n"]],[3417,3417],[3418,3418]]],[1520300116136,["Administrator@PNIN6EWFA74MMDR",[[1,3418,"\t"]],[3418,3418],[3419,3419]]],[1520300116929,["Administrator@PNIN6EWFA74MMDR",[[1,3421,"\n"]],[3419,3419],[3420,3420]]],[1520308971108,["Administrator@PNIN6EWFA74MMDR",[[1,3422,"\n"]],[3419,3419],[3420,3420]]],[1520308971509,["Administrator@PNIN6EWFA74MMDR",[[1,3423,"\n"]],[3420,3420],[3421,3421]]],[1520308972202,["Administrator@PNIN6EWFA74MMDR",[[1,3421,"如果要访问对象中并不存在的一个属性， [[Get]] 操作（参见第 3 章）就会查找对象内部\r\n[[Prototype]] 关联的对象。这个关联关系实际上定义了一条“原型链”（有点像嵌套的作\r\n原型 ｜ 163\r\n用域链），在查找属性时会对它进行遍历。\r\n所有普通对象都有内置的 Object.prototype ，指向原型链的顶端（比如说全局作用域），如\r\n果在原型链中找不到指定的属性就会停止。 toString() 、 valueOf() 和其他一些通用的功能\r\n都存在于 Object.prototype 对象上，因此语言中所有的对象都可以使用它们。\r\n关联两个对象最常用的方法是使用 new 关键词进行函数调用，在调用的 4 个步骤（第 2\r\n章）中会创建一个关联其他对象的新对象。\r\n使用 new 调用函数时会把新对象的 .prototype 属性关联到“其他对象”。带 new 的函数调用\r\n通常被称为“构造函数调用”，尽管它们实际上和传统面向类语言中的类构造函数不一样。\r\n虽然这些 JavaScript 机制和传统面向类语言中的“类初始化”和“类继承”很相似，但\r\n是 JavaScript 中的机制有一个核心区别，那就是不会进行复制，对象之间是通过内部的\r\n[[Prototype]] 链关联的。\r\n出于各种原因，以“继承”结尾的术语（包括“原型继承”）和其他面向对象的术语都无\r\n法帮助你理解 JavaScript 的真实机制（不仅仅是限制我们的思维模式）。\r\n相比之下，“委托”是一个更合适的术语，因为对象之间的关系不是复制而是委托"]],[3421,3421],[4099,4099]]],[1520308975708,["Administrator@PNIN6EWFA74MMDR",[[-1,3467,"\r"],[-1,3516,"\r"],[-1,3518,"原型 ｜ 163\r"],[-1,3547,"\r"],[-1,3599,"\r"],[-1,3654,"\r"],[-1,3700,"\r"],[-1,3746,"\r"],[-1,3767,"\r"],[-1,3822,"\r"],[-1,3864,"\r"],[-1,3911,"\r"],[-1,3958,"\r"],[-1,3979,"\r"],[-1,4020,"\r"],[-1,4061,"\r"]],[3516,3524],[3516,3516]]],[1520308976647,["Administrator@PNIN6EWFA74MMDR",[[-1,3516,"\n"]],[3516,3516],[3516,3516]]],[1520308977833,["Administrator@PNIN6EWFA74MMDR",[[-1,3515,"\n"]],[3515,3515],[3515,3515]]],[1520308984630,["Administrator@PNIN6EWFA74MMDR",[[-1,3585,"\n"]],[3585,3585],[3585,3585]]],[1520308986854,["Administrator@PNIN6EWFA74MMDR",[[-1,3638,"\n"]],[3638,3638],[3638,3638]]],[1520308992992,["Administrator@PNIN6EWFA74MMDR",[[-1,3727,"\n"]],[3727,3727],[3727,3727]]],[1520308998945,["Administrator@PNIN6EWFA74MMDR",[[-1,3800,"\n"]],[3800,3800],[3800,3800]]],[1520309004751,["Administrator@PNIN6EWFA74MMDR",[[-1,3886,"\n"]],[3886,3886],[3886,3886]]],[1520309006944,["Administrator@PNIN6EWFA74MMDR",[[-1,3931,"\n"]],[3931,3931],[3931,3931]]],[1520309008745,["Administrator@PNIN6EWFA74MMDR",[[1,3951,"\n"]],[3950,3950],[3951,3951]]],[1520309022549,["Administrator@PNIN6EWFA74MMDR",[[-1,3991,"\n"]],[3991,3991],[3991,3991]]]]]]}